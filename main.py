import requests
from telegram import Update
from telegram.ext import Application, CommandHandler
import logging
import os

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
                    level=logging.INFO)
logger = logging.getLogger(__name__)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã —Å Open-Meteo –¥–ª—è –ú–æ—Å–∫–≤—ã
def get_weather_moscow():
    latitude = 55.7522
    longitude = 37.6156
    url = f'https://api.open-meteo.com/v1/forecast?latitude={latitude}&longitude={longitude}&hourly=temperature_2m,relative_humidity_2m,apparent_temperature,precipitation,snowfall,pressure_msl,wind_speed_10m'
    
    response = requests.get(url)
    
    if response.status_code == 200:
        try:
            data = response.json()
            current_data = data['hourly']
            temperature = current_data['temperature_2m'][0]
            humidity = current_data['relative_humidity_2m'][0]
            apparent_temp = current_data['apparent_temperature'][0]
            precipitation = current_data['precipitation'][0]
            snowfall = current_data['snowfall'][0]
            pressure = current_data['pressure_msl'][0]
            wind_speed = current_data['wind_speed_10m'][0]
            
            pressure_mmHg = pressure / 1.33322
            
            weather_info = (
                f"<b>–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ (–ú–æ—Å–∫–≤–∞):</b> {temperature}¬∞C\n"
                f"<b>–û—â—É—â–∞–µ–º–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:</b> {apparent_temp}¬∞C\n"
                f"<b>–í–ª–∞–∂–Ω–æ—Å—Ç—å:</b> {humidity}%\n"
                f"<b>–û—Å–∞–¥–∫–∏:</b> {precipitation} –º–º\n"
                f"<b>–°–Ω–µ–≥–æ–ø–∞–¥:</b> {snowfall} –º–º\n"
                f"<b>–î–∞–≤–ª–µ–Ω–∏–µ:</b> {pressure_mmHg:.2f} –º–º —Ä—Ç. —Å—Ç.\n"
                f"<b>–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞:</b> {wind_speed} –º/—Å"
            )
            return weather_info
        except KeyError:
            return "–û—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –æ—Ç–≤–µ—Ç–µ –æ—Ç API."
    else:
        return f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ API: {response.status_code}. –û—Ç–≤–µ—Ç: {response.text}"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã —Å Open-Meteo –¥–ª—è –ë—Ä—è–Ω—Å–∫–∞
def get_weather_bryansk():
    latitude = 53.15
    longitude = 34.22
    url = f'https://api.open-meteo.com/v1/forecast?latitude={latitude}&longitude={longitude}&hourly=temperature_2m,relative_humidity_2m,apparent_temperature,precipitation,snowfall,pressure_msl,wind_speed_10m'
    
    response = requests.get(url)
    
    if response.status_code == 200:
        try:
            data = response.json()
            current_data = data['hourly']
            temperature = current_data['temperature_2m'][0]
            humidity = current_data['relative_humidity_2m'][0]
            apparent_temp = current_data['apparent_temperature'][0]
            precipitation = current_data['precipitation'][0]
            snowfall = current_data['snowfall'][0]
            pressure = current_data['pressure_msl'][0]
            wind_speed = current_data['wind_speed_10m'][0]
            
            pressure_mmHg = pressure / 1.33322
            
            weather_info = (
                f"<b>–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ (–ë—Ä—è–Ω—Å–∫):</b> {temperature}¬∞C\n"
                f"<b>–û—â—É—â–∞–µ–º–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:</b> {apparent_temp}¬∞C\n"
                f"<b>–í–ª–∞–∂–Ω–æ—Å—Ç—å:</b> {humidity}%\n"
                f"<b>–û—Å–∞–¥–∫–∏:</b> {precipitation} –º–º\n"
                f"<b>–°–Ω–µ–≥–æ–ø–∞–¥:</b> {snowfall} –º–º\n"
                f"<b>–î–∞–≤–ª–µ–Ω–∏–µ:</b> {pressure_mmHg:.2f} –º–º —Ä—Ç. —Å—Ç.\n"
                f"<b>–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞:</b> {wind_speed} –º/—Å"
            )
            return weather_info
        except KeyError:
            return "–û—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –æ—Ç–≤–µ—Ç–µ –æ—Ç API."
    else:
        return f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ API: {response.status_code}. –û—Ç–≤–µ—Ç: {response.text}"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã —Å Open-Meteo –¥–ª—è –ß–∞–¥—ã—Ä-–õ—É–Ω–≥–∞
def get_weather_chadyr_lunga():
    latitude = 46.0318
    longitude = 28.49
    url = f'https://api.open-meteo.com/v1/forecast?latitude={latitude}&longitude={longitude}&hourly=temperature_2m,relative_humidity_2m,apparent_temperature,precipitation,snowfall,pressure_msl,wind_speed_10m'
    
    response = requests.get(url)
    
    if response.status_code == 200:
        try:
            data = response.json()
            current_data = data['hourly']
            temperature = current_data['temperature_2m'][0]
            humidity = current_data['relative_humidity_2m'][0]
            apparent_temp = current_data['apparent_temperature'][0]
            precipitation = current_data['precipitation'][0]
            snowfall = current_data['snowfall'][0]
            pressure = current_data['pressure_msl'][0]
            wind_speed = current_data['wind_speed_10m'][0]
            
            pressure_mmHg = pressure / 1.33322
            
            weather_info = (
                f"<b>–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ (–ß–∞–¥—ã—Ä-–õ—É–Ω–≥–∞):</b> {temperature}¬∞C\n"
                f"<b>–û—â—É—â–∞–µ–º–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:</b> {apparent_temp}¬∞C\n"
                f"<b>–í–ª–∞–∂–Ω–æ—Å—Ç—å:</b> {humidity}%\n"
                f"<b>–û—Å–∞–¥–∫–∏:</b> {precipitation} –º–º\n"
                f"<b>–°–Ω–µ–≥–æ–ø–∞–¥:</b> {snowfall} –º–º\n"
                f"<b>–î–∞–≤–ª–µ–Ω–∏–µ:</b> {pressure_mmHg:.2f} –º–º —Ä—Ç. —Å—Ç.\n"
                f"<b>–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞:</b> {wind_speed} –º/—Å"
            )
            return weather_info
        except KeyError:
            return "–û—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –æ—Ç–≤–µ—Ç–µ –æ—Ç API."
    else:
        return f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ API: {response.status_code}. –û—Ç–≤–µ—Ç: {response.text}"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /weather
async def weather(update: Update, context):
    weather_info_moscow = get_weather_moscow()
    weather_info_bryansk = get_weather_bryansk()
    weather_info_chadyr_lunga = get_weather_chadyr_lunga()
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º HTML
    message = (
        f"<b>üåû –ü–æ–≥–æ–¥–∞ –≤ –ú–æ—Å–∫–≤–µ:</b>\n{weather_info_moscow}\n\n"
        f"<b>üåß –ü–æ–≥–æ–¥–∞ –≤ –ë—Ä—è–Ω—Å–∫–µ:</b>\n{weather_info_bryansk}\n\n"
        f"<b>üå¨ –ü–æ–≥–æ–¥–∞ –≤ –ß–∞–¥—ã—Ä-–õ—É–Ω–≥–∞:</b>\n{weather_info_chadyr_lunga}\n\n"
        "<i>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –î–∏–º–æ–π</i>"
    )
    
    # –ü–æ–ª—É—á–∞–µ–º chat_id –∏–∑ –∑–∞–ø—Ä–æ—Å–∞
    chat_id = update.message.chat_id
    
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç, –æ—Ç–∫—É–¥–∞ –±—ã–ª–∞ –≤—ã–∑–≤–∞–Ω–∞ –∫–æ–º–∞–Ω–¥–∞
        await context.bot.send_message(chat_id=chat_id, text=message, parse_mode="HTML")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç {chat_id}: {e}")

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
async def main():
    application = Application.builder().token(
        os.environ.get("TOKEN")
    ).build()
    application.add_handler(CommandHandler("weather", weather))  # –ö–æ–º–∞–Ω–¥–∞ /weather
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –±–µ–∑ polling, —Ç–∞–∫ –∫–∞–∫ –∑–∞–ø—Ä–æ—Å—ã –±—É–¥—É—Ç —Ç–æ–ª—å–∫–æ –ø–æ –∫–æ–º–∞–Ω–¥–µ
    await application.run_polling(poll_interval=20)  # –£–≤–µ–ª–∏—á—å—Ç–µ –≤—Ä–µ–º—è –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ.

if __name__ == "__main__":
    try:
        application = Application.builder().token("7315724244:AAEH6Wzr_2yI9f5nj5ZLRdiGqgJ3sb7yobM").build()
        application.add_handler(CommandHandler("weather", weather))
        application.run_polling(poll_interval=60)  # –ë—É–¥–µ—Ç –æ–ø—Ä–∞—à–∏–≤–∞—Ç—å –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
    except Exception as e:
        logger.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
